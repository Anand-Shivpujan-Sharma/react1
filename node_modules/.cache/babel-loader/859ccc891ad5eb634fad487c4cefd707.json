{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\nimport Segment from '../../elements/Segment/Segment';\n/**\n * A tab pane holds the content of a tab.\n */\n\nfunction TabPane(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      loading = props.loading;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(loading, 'loading'), 'tab', className);\n  var rest = getUnhandledProps(TabPane, props);\n  var ElementType = getElementType(TabPane, props);\n  var calculatedDefaultProps = {};\n\n  if (ElementType === Segment) {\n    calculatedDefaultProps.attached = 'bottom';\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, calculatedDefaultProps, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nTabPane.handledProps = [\"active\", \"as\", \"children\", \"className\", \"content\", \"loading\"];\nTabPane.defaultProps = {\n  as: Segment,\n  active: true\n};\nTabPane.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A tab pane can be active. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A Tab.Pane can display a loading indicator. */\n  loading: PropTypes.bool\n} : {};\nTabPane.create = createShorthandFactory(TabPane, function (content) {\n  return {\n    content: content\n  };\n});\nexport default TabPane;","map":{"version":3,"names":["_extends","cx","PropTypes","React","childrenUtils","createShorthandFactory","customPropTypes","getElementType","getUnhandledProps","useKeyOnly","Segment","TabPane","props","active","children","className","content","loading","classes","rest","ElementType","calculatedDefaultProps","attached","createElement","isNil","handledProps","defaultProps","as","propTypes","process","env","NODE_ENV","elementType","bool","node","string","contentShorthand","create"],"sources":["C:/Users/Anand Sharma/Desktop/react/my-app/node_modules/semantic-ui-react/dist/es/modules/Tab/TabPane.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\nimport Segment from '../../elements/Segment/Segment';\n/**\n * A tab pane holds the content of a tab.\n */\n\nfunction TabPane(props) {\n  var active = props.active,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      loading = props.loading;\n  var classes = cx(useKeyOnly(active, 'active'), useKeyOnly(loading, 'loading'), 'tab', className);\n  var rest = getUnhandledProps(TabPane, props);\n  var ElementType = getElementType(TabPane, props);\n  var calculatedDefaultProps = {};\n\n  if (ElementType === Segment) {\n    calculatedDefaultProps.attached = 'bottom';\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, calculatedDefaultProps, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nTabPane.handledProps = [\"active\", \"as\", \"children\", \"className\", \"content\", \"loading\"];\nTabPane.defaultProps = {\n  as: Segment,\n  active: true\n};\nTabPane.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A tab pane can be active. */\n  active: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A Tab.Pane can display a loading indicator. */\n  loading: PropTypes.bool\n} : {};\nTabPane.create = createShorthandFactory(TabPane, function (content) {\n  return {\n    content: content\n  };\n});\nexport default TabPane;"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,EAAP,MAAe,MAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,sBAAxB,EAAgDC,eAAhD,EAAiEC,cAAjE,EAAiFC,iBAAjF,EAAoGC,UAApG,QAAsH,WAAtH;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA;AACA;AACA;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;EACtB,IAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;EAAA,IACIC,QAAQ,GAAGF,KAAK,CAACE,QADrB;EAAA,IAEIC,SAAS,GAAGH,KAAK,CAACG,SAFtB;EAAA,IAGIC,OAAO,GAAGJ,KAAK,CAACI,OAHpB;EAAA,IAIIC,OAAO,GAAGL,KAAK,CAACK,OAJpB;EAKA,IAAIC,OAAO,GAAGjB,EAAE,CAACQ,UAAU,CAACI,MAAD,EAAS,QAAT,CAAX,EAA+BJ,UAAU,CAACQ,OAAD,EAAU,SAAV,CAAzC,EAA+D,KAA/D,EAAsEF,SAAtE,CAAhB;EACA,IAAII,IAAI,GAAGX,iBAAiB,CAACG,OAAD,EAAUC,KAAV,CAA5B;EACA,IAAIQ,WAAW,GAAGb,cAAc,CAACI,OAAD,EAAUC,KAAV,CAAhC;EACA,IAAIS,sBAAsB,GAAG,EAA7B;;EAEA,IAAID,WAAW,KAAKV,OAApB,EAA6B;IAC3BW,sBAAsB,CAACC,QAAvB,GAAkC,QAAlC;EACD;;EAED,OAAO,aAAanB,KAAK,CAACoB,aAAN,CAAoBH,WAApB,EAAiCpB,QAAQ,CAAC,EAAD,EAAKqB,sBAAL,EAA6BF,IAA7B,EAAmC;IAC9FJ,SAAS,EAAEG;EADmF,CAAnC,CAAzC,EAEhBd,aAAa,CAACoB,KAAd,CAAoBV,QAApB,IAAgCE,OAAhC,GAA0CF,QAF1B,CAApB;AAGD;;AAEDH,OAAO,CAACc,YAAR,GAAuB,CAAC,QAAD,EAAW,IAAX,EAAiB,UAAjB,EAA6B,WAA7B,EAA0C,SAA1C,EAAqD,SAArD,CAAvB;AACAd,OAAO,CAACe,YAAR,GAAuB;EACrBC,EAAE,EAAEjB,OADiB;EAErBG,MAAM,EAAE;AAFa,CAAvB;AAIAF,OAAO,CAACiB,SAAR,GAAoBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;EAC1D;EACAJ,EAAE,EAAEzB,SAAS,CAAC8B,WAF4C;;EAI1D;EACAnB,MAAM,EAAEX,SAAS,CAAC+B,IALwC;;EAO1D;EACAnB,QAAQ,EAAEZ,SAAS,CAACgC,IARsC;;EAU1D;EACAnB,SAAS,EAAEb,SAAS,CAACiC,MAXqC;;EAa1D;EACAnB,OAAO,EAAEV,eAAe,CAAC8B,gBAdiC;;EAgB1D;EACAnB,OAAO,EAAEf,SAAS,CAAC+B;AAjBuC,CAAxC,GAkBhB,EAlBJ;AAmBAtB,OAAO,CAAC0B,MAAR,GAAiBhC,sBAAsB,CAACM,OAAD,EAAU,UAAUK,OAAV,EAAmB;EAClE,OAAO;IACLA,OAAO,EAAEA;EADJ,CAAP;AAGD,CAJsC,CAAvC;AAKA,eAAeL,OAAf"},"metadata":{},"sourceType":"module"}