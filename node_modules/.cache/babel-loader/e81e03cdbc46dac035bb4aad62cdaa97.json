{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useVerticalAlignProp } from '../../lib';\nimport ItemHeader from './ItemHeader';\nimport ItemDescription from './ItemDescription';\nimport ItemExtra from './ItemExtra';\nimport ItemMeta from './ItemMeta';\n/**\n * An item can contain content.\n */\n\nfunction ItemContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      meta = props.meta,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(useVerticalAlignProp(verticalAlign), 'content', className);\n  var rest = getUnhandledProps(ItemContent, props);\n  var ElementType = getElementType(ItemContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), ItemHeader.create(header, {\n    autoGenerateKey: false\n  }), ItemMeta.create(meta, {\n    autoGenerateKey: false\n  }), ItemDescription.create(description, {\n    autoGenerateKey: false\n  }), ItemExtra.create(extra, {\n    autoGenerateKey: false\n  }), content);\n}\n\nItemContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"meta\", \"verticalAlign\"];\nItemContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for ItemDescription component. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemExtra component. */\n  extra: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemHeader component. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemMeta component. */\n  meta: customPropTypes.itemShorthand,\n\n  /** Content can specify its vertical alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default ItemContent;","map":{"version":3,"names":["_extends","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","SUI","useVerticalAlignProp","ItemHeader","ItemDescription","ItemExtra","ItemMeta","ItemContent","props","children","className","content","description","extra","header","meta","verticalAlign","classes","rest","ElementType","isNil","createElement","create","autoGenerateKey","handledProps","propTypes","process","env","NODE_ENV","as","elementType","node","string","contentShorthand","itemShorthand","oneOf","VERTICAL_ALIGNMENTS"],"sources":["C:/Users/Anand Sharma/Desktop/react/my-app/node_modules/semantic-ui-react/dist/es/views/Item/ItemContent.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useVerticalAlignProp } from '../../lib';\nimport ItemHeader from './ItemHeader';\nimport ItemDescription from './ItemDescription';\nimport ItemExtra from './ItemExtra';\nimport ItemMeta from './ItemMeta';\n/**\n * An item can contain content.\n */\n\nfunction ItemContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      description = props.description,\n      extra = props.extra,\n      header = props.header,\n      meta = props.meta,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(useVerticalAlignProp(verticalAlign), 'content', className);\n  var rest = getUnhandledProps(ItemContent, props);\n  var ElementType = getElementType(ItemContent, props);\n\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), ItemHeader.create(header, {\n    autoGenerateKey: false\n  }), ItemMeta.create(meta, {\n    autoGenerateKey: false\n  }), ItemDescription.create(description, {\n    autoGenerateKey: false\n  }), ItemExtra.create(extra, {\n    autoGenerateKey: false\n  }), content);\n}\n\nItemContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"meta\", \"verticalAlign\"];\nItemContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Shorthand for ItemDescription component. */\n  description: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemExtra component. */\n  extra: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemHeader component. */\n  header: customPropTypes.itemShorthand,\n\n  /** Shorthand for ItemMeta component. */\n  meta: customPropTypes.itemShorthand,\n\n  /** Content can specify its vertical alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default ItemContent;"],"mappings":"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"},"metadata":{},"sourceType":"module"}