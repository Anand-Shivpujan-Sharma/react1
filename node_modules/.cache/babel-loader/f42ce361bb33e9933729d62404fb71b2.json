{"ast":null,"code":"import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as React from 'react';\nimport { handleRef } from './utils';\nexport var RefForward = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(RefForward, _React$Component);\n\n  function RefForward() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.currentNode = void 0;\n\n    _this.handleRefOverride = function (node) {\n      var _this$props = _this.props,\n          children = _this$props.children,\n          innerRef = _this$props.innerRef;\n      handleRef(children.ref, node);\n      handleRef(innerRef, node);\n      _this.currentNode = node;\n    };\n\n    return _this;\n  }\n\n  var _proto = RefForward.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.innerRef !== this.props.innerRef) {\n      handleRef(this.props.innerRef, this.currentNode);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    delete this.currentNode;\n  };\n\n  _proto.render = function render() {\n    var children = this.props.children;\n    return /*#__PURE__*/React.cloneElement(children, {\n      ref: this.handleRefOverride\n    });\n  };\n\n  return RefForward;\n}(React.Component);","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAAoC,SAApC;AAEA,WAAaC,UAAb;EAAAC;;EAAA;IAAA;;IAAA;MAAAC;IAAA;;IAAAC;IAAAA,MACEC,WADF;;IAAAD,MAGEE,iBAHF,GAGsB,UAACC,IAAD,EAAuB;MACzC,kBAA+BH,MAAKI,KAApC;MAAA,IAAQC,QAAR,eAAQA,QAAR;MAAA,IAAkBC,QAAlB,eAAkBA,QAAlB;MAEAV,SAAS,CAAES,QAAD,CAA2DE,GAA5D,EAAiEJ,IAAjE,CAATP;MACAA,SAAS,CAACU,QAAD,EAAWH,IAAX,CAATP;MAEAI,MAAKC,WAAL,GAAmBE,IAAnB;IATJ;;IAAA;EAAA;;EAAA;;EAAAK,OAYEC,kBAZF,GAYE,4BAAmBC,SAAnB,EAAwC;IACtC,IAAIA,SAAS,CAACJ,QAAVI,KAAuB,KAAKN,KAAL,CAAWE,QAAtC,EAAgD;MAC9CV,SAAS,CAAC,KAAKQ,KAAL,CAAWE,QAAZ,EAAsB,KAAKL,WAA3B,CAATL;IACD;EAfL;;EAAAY,OAkBEG,oBAlBF,GAkBE,gCAAuB;IACrB,OAAO,KAAKV,WAAZ;EAnBJ;;EAAAO,OAsBEI,MAtBF,GAsBE,kBAAS;IACP,IAAQP,QAAR,GAAqB,KAAKD,KAAL,CAAbC,QAAR;IAEA,oBAAOV,KAAK,CAACkB,YAANlB,CAAmBU,QAAnBV,EAA6B;MAClCY,GAAG,EAAE,KAAKL;IADwB,CAA7BP,CAAP;EAzBJ;;EAAA;AAAA,EAAgCA,KAAK,CAACmB,SAAtC","names":["React","handleRef","RefForward","_inheritsLoose","args","_this","currentNode","handleRefOverride","node","props","children","innerRef","ref","_proto","componentDidUpdate","prevProps","componentWillUnmount","render","cloneElement","Component"],"sources":["C:\\Users\\Anand Sharma\\Desktop\\react\\my-app\\node_modules\\@fluentui\\react-component-ref\\dist\\es\\RefForward.tsx"],"sourcesContent":["import * as React from 'react';\nimport { handleRef, RefProps } from './utils';\n\nexport class RefForward extends React.Component<RefProps> {\n  currentNode?: Node | null;\n\n  handleRefOverride = (node: HTMLElement) => {\n    const { children, innerRef } = this.props;\n\n    handleRef((children as React.ReactElement & { ref: React.Ref<any> }).ref, node);\n    handleRef(innerRef, node);\n\n    this.currentNode = node;\n  };\n\n  componentDidUpdate(prevProps: RefProps) {\n    if (prevProps.innerRef !== this.props.innerRef) {\n      handleRef(this.props.innerRef, this.currentNode);\n    }\n  }\n\n  componentWillUnmount() {\n    delete this.currentNode;\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return React.cloneElement(children, {\n      ref: this.handleRefOverride,\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}