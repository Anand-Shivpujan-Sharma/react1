{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { getUnhandledProps } from '../../lib';\nimport Checkbox from '../../modules/Checkbox';\n/**\n * A Radio is sugar for <Checkbox radio />.\n * Useful for exclusive groups of sliders or toggles.\n * @see Checkbox\n * @see Form\n */\n\nfunction Radio(props) {\n  var slider = props.slider,\n      toggle = props.toggle,\n      type = props.type;\n  var rest = getUnhandledProps(Radio, props); // const ElementType = getElementType(Radio, props)\n  // radio, slider, toggle are exclusive\n  // use an undefined radio if slider or toggle are present\n\n  var radio = !(slider || toggle) || undefined;\n  return /*#__PURE__*/React.createElement(Checkbox, _extends({}, rest, {\n    type: type,\n    radio: radio,\n    slider: slider,\n    toggle: toggle\n  }));\n}\n\nRadio.handledProps = [\"slider\", \"toggle\", \"type\"];\nRadio.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Format to emphasize the current selection state. */\n  slider: Checkbox.propTypes.slider,\n\n  /** Format to show an on or off choice. */\n  toggle: Checkbox.propTypes.toggle,\n\n  /** HTML input type, either checkbox or radio. */\n  type: Checkbox.propTypes.type\n} : {};\nRadio.defaultProps = {\n  type: 'radio'\n};\nexport default Radio;","map":{"version":3,"names":["_extends","React","getUnhandledProps","Checkbox","Radio","props","slider","toggle","type","rest","radio","undefined","createElement","handledProps","propTypes","process","env","NODE_ENV","defaultProps"],"sources":["C:/Users/Anand Sharma/Desktop/react/my-app/node_modules/semantic-ui-react/dist/es/addons/Radio/Radio.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { getUnhandledProps } from '../../lib';\nimport Checkbox from '../../modules/Checkbox';\n/**\n * A Radio is sugar for <Checkbox radio />.\n * Useful for exclusive groups of sliders or toggles.\n * @see Checkbox\n * @see Form\n */\n\nfunction Radio(props) {\n  var slider = props.slider,\n      toggle = props.toggle,\n      type = props.type;\n  var rest = getUnhandledProps(Radio, props); // const ElementType = getElementType(Radio, props)\n  // radio, slider, toggle are exclusive\n  // use an undefined radio if slider or toggle are present\n\n  var radio = !(slider || toggle) || undefined;\n  return /*#__PURE__*/React.createElement(Checkbox, _extends({}, rest, {\n    type: type,\n    radio: radio,\n    slider: slider,\n    toggle: toggle\n  }));\n}\n\nRadio.handledProps = [\"slider\", \"toggle\", \"type\"];\nRadio.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Format to emphasize the current selection state. */\n  slider: Checkbox.propTypes.slider,\n\n  /** Format to show an on or off choice. */\n  toggle: Checkbox.propTypes.toggle,\n\n  /** HTML input type, either checkbox or radio. */\n  type: Checkbox.propTypes.type\n} : {};\nRadio.defaultProps = {\n  type: 'radio'\n};\nexport default Radio;"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,WAAlC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;EACpB,IAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;EAAA,IACIC,MAAM,GAAGF,KAAK,CAACE,MADnB;EAAA,IAEIC,IAAI,GAAGH,KAAK,CAACG,IAFjB;EAGA,IAAIC,IAAI,GAAGP,iBAAiB,CAACE,KAAD,EAAQC,KAAR,CAA5B,CAJoB,CAIwB;EAC5C;EACA;;EAEA,IAAIK,KAAK,GAAG,EAAEJ,MAAM,IAAIC,MAAZ,KAAuBI,SAAnC;EACA,OAAO,aAAaV,KAAK,CAACW,aAAN,CAAoBT,QAApB,EAA8BH,QAAQ,CAAC,EAAD,EAAKS,IAAL,EAAW;IACnED,IAAI,EAAEA,IAD6D;IAEnEE,KAAK,EAAEA,KAF4D;IAGnEJ,MAAM,EAAEA,MAH2D;IAInEC,MAAM,EAAEA;EAJ2D,CAAX,CAAtC,CAApB;AAMD;;AAEDH,KAAK,CAACS,YAAN,GAAqB,CAAC,QAAD,EAAW,QAAX,EAAqB,MAArB,CAArB;AACAT,KAAK,CAACU,SAAN,GAAkBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;EACxD;EACAX,MAAM,EAAEH,QAAQ,CAACW,SAAT,CAAmBR,MAF6B;;EAIxD;EACAC,MAAM,EAAEJ,QAAQ,CAACW,SAAT,CAAmBP,MAL6B;;EAOxD;EACAC,IAAI,EAAEL,QAAQ,CAACW,SAAT,CAAmBN;AAR+B,CAAxC,GASd,EATJ;AAUAJ,KAAK,CAACc,YAAN,GAAqB;EACnBV,IAAI,EAAE;AADa,CAArB;AAGA,eAAeJ,KAAf"},"metadata":{},"sourceType":"module"}