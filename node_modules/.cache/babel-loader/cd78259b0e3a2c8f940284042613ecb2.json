{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useWidthProp } from '../../lib';\n/**\n * A set of fields can appear grouped together.\n * @see Form\n */\n\nfunction FormGroup(props) {\n  var children = props.children,\n      className = props.className,\n      grouped = props.grouped,\n      inline = props.inline,\n      unstackable = props.unstackable,\n      widths = props.widths;\n  var classes = cx(useKeyOnly(grouped, 'grouped'), useKeyOnly(inline, 'inline'), useKeyOnly(unstackable, 'unstackable'), useWidthProp(widths, null, true), 'fields', className);\n  var rest = getUnhandledProps(FormGroup, props);\n  var ElementType = getElementType(FormGroup, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nFormGroup.handledProps = [\"as\", \"children\", \"className\", \"grouped\", \"inline\", \"unstackable\", \"widths\"];\nFormGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Fields can show related choices. */\n  grouped: customPropTypes.every([customPropTypes.disallow(['inline']), PropTypes.bool]),\n\n  /** Multiple fields may be inline in a row. */\n  inline: customPropTypes.every([customPropTypes.disallow(['grouped']), PropTypes.bool]),\n\n  /** A form group can prevent itself from stacking on mobile. */\n  unstackable: PropTypes.bool,\n\n  /** Fields Groups can specify their width in grid columns or automatically divide fields to be equal width. */\n  widths: PropTypes.oneOf([].concat(SUI.WIDTHS, ['equal']))\n} : {};\nexport default FormGroup;","map":{"version":3,"names":["_extends","cx","PropTypes","React","customPropTypes","getElementType","getUnhandledProps","SUI","useKeyOnly","useWidthProp","FormGroup","props","children","className","grouped","inline","unstackable","widths","classes","rest","ElementType","createElement","handledProps","propTypes","process","env","NODE_ENV","as","elementType","node","string","every","disallow","bool","oneOf","concat","WIDTHS"],"sources":["C:/Users/Anand Sharma/Desktop/react/my-app/node_modules/semantic-ui-react/dist/es/collections/Form/FormGroup.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useWidthProp } from '../../lib';\n/**\n * A set of fields can appear grouped together.\n * @see Form\n */\n\nfunction FormGroup(props) {\n  var children = props.children,\n      className = props.className,\n      grouped = props.grouped,\n      inline = props.inline,\n      unstackable = props.unstackable,\n      widths = props.widths;\n  var classes = cx(useKeyOnly(grouped, 'grouped'), useKeyOnly(inline, 'inline'), useKeyOnly(unstackable, 'unstackable'), useWidthProp(widths, null, true), 'fields', className);\n  var rest = getUnhandledProps(FormGroup, props);\n  var ElementType = getElementType(FormGroup, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nFormGroup.handledProps = [\"as\", \"children\", \"className\", \"grouped\", \"inline\", \"unstackable\", \"widths\"];\nFormGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Fields can show related choices. */\n  grouped: customPropTypes.every([customPropTypes.disallow(['inline']), PropTypes.bool]),\n\n  /** Multiple fields may be inline in a row. */\n  inline: customPropTypes.every([customPropTypes.disallow(['grouped']), PropTypes.bool]),\n\n  /** A form group can prevent itself from stacking on mobile. */\n  unstackable: PropTypes.bool,\n\n  /** Fields Groups can specify their width in grid columns or automatically divide fields to be equal width. */\n  widths: PropTypes.oneOf([].concat(SUI.WIDTHS, ['equal']))\n} : {};\nexport default FormGroup;"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,EAAP,MAAe,MAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,cAA1B,EAA0CC,iBAA1C,EAA6DC,GAA7D,EAAkEC,UAAlE,EAA8EC,YAA9E,QAAkG,WAAlG;AACA;AACA;AACA;AACA;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EACxB,IAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;EAAA,IACIC,SAAS,GAAGF,KAAK,CAACE,SADtB;EAAA,IAEIC,OAAO,GAAGH,KAAK,CAACG,OAFpB;EAAA,IAGIC,MAAM,GAAGJ,KAAK,CAACI,MAHnB;EAAA,IAIIC,WAAW,GAAGL,KAAK,CAACK,WAJxB;EAAA,IAKIC,MAAM,GAAGN,KAAK,CAACM,MALnB;EAMA,IAAIC,OAAO,GAAGjB,EAAE,CAACO,UAAU,CAACM,OAAD,EAAU,SAAV,CAAX,EAAiCN,UAAU,CAACO,MAAD,EAAS,QAAT,CAA3C,EAA+DP,UAAU,CAACQ,WAAD,EAAc,aAAd,CAAzE,EAAuGP,YAAY,CAACQ,MAAD,EAAS,IAAT,EAAe,IAAf,CAAnH,EAAyI,QAAzI,EAAmJJ,SAAnJ,CAAhB;EACA,IAAIM,IAAI,GAAGb,iBAAiB,CAACI,SAAD,EAAYC,KAAZ,CAA5B;EACA,IAAIS,WAAW,GAAGf,cAAc,CAACK,SAAD,EAAYC,KAAZ,CAAhC;EACA,OAAO,aAAaR,KAAK,CAACkB,aAAN,CAAoBD,WAApB,EAAiCpB,QAAQ,CAAC,EAAD,EAAKmB,IAAL,EAAW;IACtEN,SAAS,EAAEK;EAD2D,CAAX,CAAzC,EAEhBN,QAFgB,CAApB;AAGD;;AAEDF,SAAS,CAACY,YAAV,GAAyB,CAAC,IAAD,EAAO,UAAP,EAAmB,WAAnB,EAAgC,SAAhC,EAA2C,QAA3C,EAAqD,aAArD,EAAoE,QAApE,CAAzB;AACAZ,SAAS,CAACa,SAAV,GAAsBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;EAC5D;EACAC,EAAE,EAAEzB,SAAS,CAAC0B,WAF8C;;EAI5D;EACAhB,QAAQ,EAAEV,SAAS,CAAC2B,IALwC;;EAO5D;EACAhB,SAAS,EAAEX,SAAS,CAAC4B,MARuC;;EAU5D;EACAhB,OAAO,EAAEV,eAAe,CAAC2B,KAAhB,CAAsB,CAAC3B,eAAe,CAAC4B,QAAhB,CAAyB,CAAC,QAAD,CAAzB,CAAD,EAAuC9B,SAAS,CAAC+B,IAAjD,CAAtB,CAXmD;;EAa5D;EACAlB,MAAM,EAAEX,eAAe,CAAC2B,KAAhB,CAAsB,CAAC3B,eAAe,CAAC4B,QAAhB,CAAyB,CAAC,SAAD,CAAzB,CAAD,EAAwC9B,SAAS,CAAC+B,IAAlD,CAAtB,CAdoD;;EAgB5D;EACAjB,WAAW,EAAEd,SAAS,CAAC+B,IAjBqC;;EAmB5D;EACAhB,MAAM,EAAEf,SAAS,CAACgC,KAAV,CAAgB,GAAGC,MAAH,CAAU5B,GAAG,CAAC6B,MAAd,EAAsB,CAAC,OAAD,CAAtB,CAAhB;AApBoD,CAAxC,GAqBlB,EArBJ;AAsBA,eAAe1B,SAAf"},"metadata":{},"sourceType":"module"}