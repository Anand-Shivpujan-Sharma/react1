{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A divider visually segments content into groups.\n */\n\nfunction Divider(props) {\n  var children = props.children,\n      className = props.className,\n      clearing = props.clearing,\n      content = props.content,\n      fitted = props.fitted,\n      hidden = props.hidden,\n      horizontal = props.horizontal,\n      inverted = props.inverted,\n      section = props.section,\n      vertical = props.vertical;\n  var classes = cx('ui', useKeyOnly(clearing, 'clearing'), useKeyOnly(fitted, 'fitted'), useKeyOnly(hidden, 'hidden'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), useKeyOnly(section, 'section'), useKeyOnly(vertical, 'vertical'), 'divider', className);\n  var rest = getUnhandledProps(Divider, props);\n  var ElementType = getElementType(Divider, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nDivider.handledProps = [\"as\", \"children\", \"className\", \"clearing\", \"content\", \"fitted\", \"hidden\", \"horizontal\", \"inverted\", \"section\", \"vertical\"];\nDivider.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Divider can clear the content above it. */\n  clearing: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Divider can be fitted without any space above or below it. */\n  fitted: PropTypes.bool,\n\n  /** Divider can divide content without creating a dividing line. */\n  hidden: PropTypes.bool,\n\n  /** Divider can segment content horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** Divider can have its colours inverted. */\n  inverted: PropTypes.bool,\n\n  /** Divider can provide greater margins to divide sections of content. */\n  section: PropTypes.bool,\n\n  /** Divider can segment content vertically. */\n  vertical: PropTypes.bool\n} : {};\nexport default Divider;","map":{"version":3,"names":["_extends","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","useKeyOnly","Divider","props","children","className","clearing","content","fitted","hidden","horizontal","inverted","section","vertical","classes","rest","ElementType","createElement","isNil","handledProps","propTypes","process","env","NODE_ENV","as","elementType","node","string","bool","contentShorthand"],"sources":["C:/Users/Anand Sharma/Desktop/react/my-app/node_modules/semantic-ui-react/dist/es/elements/Divider/Divider.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A divider visually segments content into groups.\n */\n\nfunction Divider(props) {\n  var children = props.children,\n      className = props.className,\n      clearing = props.clearing,\n      content = props.content,\n      fitted = props.fitted,\n      hidden = props.hidden,\n      horizontal = props.horizontal,\n      inverted = props.inverted,\n      section = props.section,\n      vertical = props.vertical;\n  var classes = cx('ui', useKeyOnly(clearing, 'clearing'), useKeyOnly(fitted, 'fitted'), useKeyOnly(hidden, 'hidden'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), useKeyOnly(section, 'section'), useKeyOnly(vertical, 'vertical'), 'divider', className);\n  var rest = getUnhandledProps(Divider, props);\n  var ElementType = getElementType(Divider, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nDivider.handledProps = [\"as\", \"children\", \"className\", \"clearing\", \"content\", \"fitted\", \"hidden\", \"horizontal\", \"inverted\", \"section\", \"vertical\"];\nDivider.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Divider can clear the content above it. */\n  clearing: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Divider can be fitted without any space above or below it. */\n  fitted: PropTypes.bool,\n\n  /** Divider can divide content without creating a dividing line. */\n  hidden: PropTypes.bool,\n\n  /** Divider can segment content horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** Divider can have its colours inverted. */\n  inverted: PropTypes.bool,\n\n  /** Divider can provide greater margins to divide sections of content. */\n  section: PropTypes.bool,\n\n  /** Divider can segment content vertically. */\n  vertical: PropTypes.bool\n} : {};\nexport default Divider;"],"mappings":"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"},"metadata":{},"sourceType":"module"}