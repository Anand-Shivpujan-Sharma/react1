{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\n/**\n * A label can be grouped.\n */\n\nfunction LabelGroup(props) {\n  var children = props.children,\n      circular = props.circular,\n      className = props.className,\n      color = props.color,\n      content = props.content,\n      size = props.size,\n      tag = props.tag;\n  var classes = cx('ui', color, size, useKeyOnly(circular, 'circular'), useKeyOnly(tag, 'tag'), 'labels', className);\n  var rest = getUnhandledProps(LabelGroup, props);\n  var ElementType = getElementType(LabelGroup, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nLabelGroup.handledProps = [\"as\", \"children\", \"circular\", \"className\", \"color\", \"content\", \"size\", \"tag\"];\nLabelGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Labels can share shapes. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Label group can share colors together. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Label group can share sizes together. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** Label group can share tag formatting. */\n  tag: PropTypes.bool\n} : {};\nexport default LabelGroup;","map":{"version":3,"names":["_extends","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","SUI","useKeyOnly","LabelGroup","props","children","circular","className","color","content","size","tag","classes","rest","ElementType","createElement","isNil","handledProps","propTypes","process","env","NODE_ENV","as","elementType","node","bool","string","oneOf","COLORS","contentShorthand","SIZES"],"sources":["C:/Users/Anand Sharma/Desktop/react/my-app/node_modules/semantic-ui-react/dist/es/elements/Label/LabelGroup.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly } from '../../lib';\n/**\n * A label can be grouped.\n */\n\nfunction LabelGroup(props) {\n  var children = props.children,\n      circular = props.circular,\n      className = props.className,\n      color = props.color,\n      content = props.content,\n      size = props.size,\n      tag = props.tag;\n  var classes = cx('ui', color, size, useKeyOnly(circular, 'circular'), useKeyOnly(tag, 'tag'), 'labels', className);\n  var rest = getUnhandledProps(LabelGroup, props);\n  var ElementType = getElementType(LabelGroup, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nLabelGroup.handledProps = [\"as\", \"children\", \"circular\", \"className\", \"color\", \"content\", \"size\", \"tag\"];\nLabelGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Labels can share shapes. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Label group can share colors together. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Label group can share sizes together. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** Label group can share tag formatting. */\n  tag: PropTypes.bool\n} : {};\nexport default LabelGroup;"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,EAAP,MAAe,MAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,cAAzC,EAAyDC,iBAAzD,EAA4EC,GAA5E,EAAiFC,UAAjF,QAAmG,WAAnG;AACA;AACA;AACA;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;EACzB,IAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;EAAA,IACIC,QAAQ,GAAGF,KAAK,CAACE,QADrB;EAAA,IAEIC,SAAS,GAAGH,KAAK,CAACG,SAFtB;EAAA,IAGIC,KAAK,GAAGJ,KAAK,CAACI,KAHlB;EAAA,IAIIC,OAAO,GAAGL,KAAK,CAACK,OAJpB;EAAA,IAKIC,IAAI,GAAGN,KAAK,CAACM,IALjB;EAAA,IAMIC,GAAG,GAAGP,KAAK,CAACO,GANhB;EAOA,IAAIC,OAAO,GAAGlB,EAAE,CAAC,IAAD,EAAOc,KAAP,EAAcE,IAAd,EAAoBR,UAAU,CAACI,QAAD,EAAW,UAAX,CAA9B,EAAsDJ,UAAU,CAACS,GAAD,EAAM,KAAN,CAAhE,EAA8E,QAA9E,EAAwFJ,SAAxF,CAAhB;EACA,IAAIM,IAAI,GAAGb,iBAAiB,CAACG,UAAD,EAAaC,KAAb,CAA5B;EACA,IAAIU,WAAW,GAAGf,cAAc,CAACI,UAAD,EAAaC,KAAb,CAAhC;EACA,OAAO,aAAaR,KAAK,CAACmB,aAAN,CAAoBD,WAApB,EAAiCrB,QAAQ,CAAC,EAAD,EAAKoB,IAAL,EAAW;IACtEN,SAAS,EAAEK;EAD2D,CAAX,CAAzC,EAEhBf,aAAa,CAACmB,KAAd,CAAoBX,QAApB,IAAgCI,OAAhC,GAA0CJ,QAF1B,CAApB;AAGD;;AAEDF,UAAU,CAACc,YAAX,GAA0B,CAAC,IAAD,EAAO,UAAP,EAAmB,UAAnB,EAA+B,WAA/B,EAA4C,OAA5C,EAAqD,SAArD,EAAgE,MAAhE,EAAwE,KAAxE,CAA1B;AACAd,UAAU,CAACe,SAAX,GAAuBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;EAC7D;EACAC,EAAE,EAAE3B,SAAS,CAAC4B,WAF+C;;EAI7D;EACAlB,QAAQ,EAAEV,SAAS,CAAC6B,IALyC;;EAO7D;EACAlB,QAAQ,EAAEX,SAAS,CAAC8B,IARyC;;EAU7D;EACAlB,SAAS,EAAEZ,SAAS,CAAC+B,MAXwC;;EAa7D;EACAlB,KAAK,EAAEb,SAAS,CAACgC,KAAV,CAAgB1B,GAAG,CAAC2B,MAApB,CAdsD;;EAgB7D;EACAnB,OAAO,EAAEX,eAAe,CAAC+B,gBAjBoC;;EAmB7D;EACAnB,IAAI,EAAEf,SAAS,CAACgC,KAAV,CAAgB1B,GAAG,CAAC6B,KAApB,CApBuD;;EAsB7D;EACAnB,GAAG,EAAEhB,SAAS,CAAC8B;AAvB8C,CAAxC,GAwBnB,EAxBJ;AAyBA,eAAetB,UAAf"},"metadata":{},"sourceType":"module"}